// Code generated by go generate; DO NOT EDIT.
package aws

import (
	"context"

	"github.com/dop251/goja"
	"github.com/aws/aws-sdk-go-v2/service/s3"
)

type S3Client struct {
	*AWS
	sdk *s3.Client
}

func (a *AWS) newS3Client(call goja.ConstructorCall) *goja.Object {
	awsCfg := a.constructorCallToConfig("S3Client", call)

	sdk := s3.NewFromConfig(awsCfg, func(o *s3.Options) {
		o.UsePathStyle = true // Ensure path-style is used
	})

	client := &S3Client{
		AWS: a,
		sdk: sdk,
	}

	return a.vu.Runtime().ToValue(client).ToObject(a.vu.Runtime())
}


func (c *S3Client) ListBuckets(obj *goja.Object,) goja.Value {
	in := &s3.ListBucketsInput{}
	if err := fromGojaObject(c.vu.Runtime(), obj, in); err != nil {
		panic(err)
	}

	out, err := c.sdk.ListBuckets(context.Background(), in, )
    if err != nil {
		panic(err)
	}

	return c.vu.Runtime().ToValue(out)
}

func (c *S3Client) ListObjects(obj *goja.Object,) goja.Value {
	in := &s3.ListObjectsInput{}
	if err := fromGojaObject(c.vu.Runtime(), obj, in); err != nil {
		panic(err)
	}

	out, err := c.sdk.ListObjects(context.Background(), in, )
    if err != nil {
		panic(err)
	}

	return c.vu.Runtime().ToValue(out)
}

